Monitoring
==========

In order to be able to continuously get an overview of the health of a Neo4j database, there are different levels of monitoring facilities available.


== JMX ==

=== How to connect to a Neo4j instance using JMX and JConsole ===

First, start your embedded database or the Neo4j Server, for instance using

[source,shell]
----
$NEO4j_SERVER_HOME/bin/neo4j start
----

Now, start JConsole with
[source,shell]
----
$JAVA_HOME/bin/jconsole
----

And connect to the process running your Neo4j database instance:

.Connecting JConsole to the Neo4j Java process
image::../images/operations/jconsole_connect.png[scaledwidth="100%", alt="Connecting with JConsole"]

Now, beside the MBeans exposed by the JVM, you will see an org.neo section in the MBeans tab. Under that, you will have access to all the monitoring information exposed by the Neo4j Kernel.


.Neo4j MBeans View
image::../images/operations/jconsole_beans.png[scaledwidth="100%",alt="Neo4j MBeans view"]


=== How to connect to the JMX monitoring programmatically ===

In order to programmatically connect to the Neo4j JMX server, there are some convenience methods in the Neo4j Management component to help you find out the most commonly used monitoring attributes of the Neo4j Kernel. For instance, the number of node IDs in use can be obtained with code like:

[source, java]
----
Neo4jManager manager = new Neo4jManager( graphDb.getManagementBean( Kernel.class ) );
long nodeIDsInUse    = manager.getPrimitivesBean.getNumberOfNodeIdsInUse();
----

Once having access to this information, it can be used to for instance expose the values to SNMP:: or other monitoring systems.

=== Reference of supported JMX MBeans ===

todo

