[[configuration-introduction]]
Introduction
===========

To gain good performance, these are the things to look into first:

* Make sure the JVM is not spending too much time performing garbage collection.
  Monitoring heap usage on an application that uses Neo4j can be a bit confusing since Neo4j will increase the size of caches if there is available memory and decrease if the heap is getting full. 
  The goal is to have a large enough heap to make sure that heavy/peak load will not result in so called GC trashing (performance can drop as much as two orders of magnitude when GC trashing happens).
* Start the JVM with the -server flag and a good sized heap (see <<configuration-jvm>>). Having too large heap may also hurt performance so you may have to try some different heap sizes.
* Use the parallel/concurrent garbage collector (we found that -XX:+UseConcMarkSweepGC works well in most use-cases) 


