osgiVersion = "1.0"
jtaSpecVersion = "1.1.1"
httpComponentsVersion = "4.0.1"
commonsIoVersion = "1.4"
luceneBundleVersion = "3.0.1_2"
nettyVersion = "3.2.1.Final"
zookeeperVersion = "3.3.2"
junitVersion = "4.8.2"
log4jVersion = "1.2.16"

sourceCompatibility = 1.6

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

subprojects {
    group = 'org.neo4j'
    version = '1.3-SNAPSHOT'

    sourceCompatibility = 1.6

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    repositories {
        mavenLocal()
        mavenCentral()
        mavenRepo urls: "http://repository.jboss.org/nexus/content/groups/public/"
    }

    dependencies {
        testCompile "junit:junit:$junitVersion"
        //   javadoc "junit:junit:$junitVersion"
    }

    [compileJava, compileTestJava, javadoc]*.options.collect { options ->
        options.encoding = 'UTF-8'
    }

    // compileJava.options.compilerArgs = ['-Xlint:unchecked']

    ideaModule.downloadJavadoc = true
    ideaModule.downloadSources = true
    ideaModule.outputDir = project.sourceSets.main.classesDir
    ideaModule.testOutputDir = project.sourceSets.test.classesDir

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task testsJar(type: Jar, dependsOn: javadoc) {
        classifier = 'tests'
        from sourceSets.test.allSource
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
        archives testsJar
    }
}

ideaModule.downloadJavadoc = true
ideaModule.downloadSources = true
ideaModule.outputDir = project.sourceSets.main.classesDir
ideaModule.testOutputDir = project.sourceSets.test.classesDir

ideaProject {
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}
