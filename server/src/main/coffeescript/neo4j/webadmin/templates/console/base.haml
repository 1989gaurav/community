.sidebar
  %p.pad The Neo4j console allows you to use the <a href="http://gremlin.tinkerpop.com" target="_BLANK">Gremlin graph traversal language</a> for working with your graph. Gremlin is an expressive data flow language that can be used for graph query and manipulation, built on and adding to <a href="http://groovy.codehaus.org/Documentation" target="_BLANK">Groovy</a>.
  %p.pad Using Gremlin, you can perform powerful data manipulations. <a href="http://gremlin.tinkerpop.com" target="_BLANK">More information.</a>

  .foldout
    %h2
      %a.foldout_trigger(href="#") Cheat sheet
    .foldout_content
      %ul.info_list
        %li
          %h3 Local graph
          %p &gt; g
        %li
          %h3 Set variable
          %p &gt; myVar = "My Value"
        %li
          %h3 Get node by id
          %p &gt; refNode = g.v(0)
        %li
          %h3 Set property on Node
          %p &gt; refNode.name = "bob"
        %li
          %h3 List all node properties
          %p &gt; refNode.map
        %li
          %h3 Define a properties map
          %p &gt; props = [:]
        %li
          %h3 Create a node
          %p &gt; secondNode = g.addVertex(props)
        %li
          %h3 Create relation
          %p &gt; myRelation = g.addEdge(props, refNode, secondNode, 'KNOWS')
        %li
          %h3 Remove node or relation
          %p &gt; g.removeEdge(myRelation)
          %p &gt; g.removeVertex(secondNode)
        %li
          %h3 List relations of node</h3>
          %p 
            %ul
              %li &gt; refNode.bothE
              %li &gt; refNode.inE
              %li &gt; refNode.outE
              %li &gt; refNode.bothE{it.label="relation type"}
        %li
          %h3 List nodes of relation
          %p 
            %ul
              %li &gt; myRelation.bothV
              %li &gt; myRelation.inV
              %li &gt; myRelation.outV

.workarea.with-sidebar#console-base.pad
  #console


