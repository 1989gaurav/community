Introduction
============

== Expectations, Assumptions, and Aspirations ==

This is a reference manual. 
The material is practical, technical, and focused on answering specific questions. 
It addresses how things work, what to do and what to avoid to successfully run Neo4j in a production environment. 
After a brief introduction, each topic area assumes general familiarity as it addresses the particular details of Neo4j.
 
The goal is to be thumb-through and rule-of-thumb friendly.

The topics should be relevant to architects, administrators, developers and operations personnel.
You should already know about Neo4j and using graphs to store data.
If you are completely new to Neo4j please check out http://neo4j.org first.

== Graph databases versus Relational databases ==

While graph structures in theory are normalizable even in Relational Database 
Systems (RDBMS), this has serious query performance implications for recursive structures 
like for instance file trees and network structures like e.g. social graphs, due to the 
implementation characteristics of relational databases. Every operation over a relationship 
of a network results in a "join" operation in the RDBMS, implemented as a set-operation 
between the sets of primary keys for two tables - a comparatively slow operation and not scalable over 
growing numbers of tuples in these tables.

TODO:
Neo4j System architecture diagram




